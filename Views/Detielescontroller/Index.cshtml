@using ECommerceWebsite.Models.ViewModals
@model EventIndexViewModel

@{
    ViewData["Title"] = "Products";
    Layout = "_contantLayout";
}

<!-- Product Catagories Area Start -->
<div class="products-catagories-area clearfix">
    <div class="amado-pro-catagory clearfix">
        @foreach (var item in Model.Events)
        {
            <!-- Single Catagory -->
            <div class="single-products-catagory clearfix">
                <a href="shop.html">
                    <img src="~/images/@item.ProductImage" alt="@item.ProductName" />
                    <!-- Hover Content -->
                    <div class="hover-content">
                        <div class="line"></div>
                        <p>@item.Price JD</p>
                        <p>@item.Discount %</p>
                        <h4>@item.ProductName</h4>
                    </div>
                </a>
            </div>

        }
    </div>
</div>
<!-- Product Catagories Area End -->
<!-- JavaScript Initialization -->
<script src="https://unpkg.com/isotope-layout@3/dist/isotope.pkgd.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let productList = document.getElementById('productList');
        let showMoreBtn = document.getElementById('showMoreBtn');
        let items = Array.from(productList.querySelectorAll('.portfolio-item'));
        let itemsToShow = 3; // Number of items to show initially and when "Show More" is clicked
        let displayedItems = 0;
        let iso;
        let currentFilter = '*';

        function initializeIsotope() {
            const portfolioContainer = document.querySelector('.portfolio-container');
            if (portfolioContainer) {
                iso = new Isotope(portfolioContainer, {
                    itemSelector: '.portfolio-item',
                    layoutMode: 'fitRows'
                });
                // Apply current filter
                iso.arrange({ filter: currentFilter });
            }
        }

        function updateDisplay() {
            // Apply current filter
            iso.arrange({ filter: currentFilter });

            // Display only the number of items we want to show
            items.forEach((item, index) => {
                if (index < displayedItems) {
                    item.style.display = 'block';
                } else {
                    item.style.display = 'none';
                }
            });

            // Reinitialize Isotope after updating display
            if (iso) {
                iso.arrange();
            }

            // If all items are shown, hide the button
            if (displayedItems >= items.length) {
                showMoreBtn.style.display = 'none';
            }
        }

        showMoreBtn.addEventListener('click', function () {
            displayedItems += itemsToShow;
            updateDisplay();
        });

        // Initial display setup
        displayedItems = itemsToShow;
        initializeIsotope();
        updateDisplay();
    });

    // Filter products by category
    function filterByCategory(category) {
        currentFilter = category === 'all' ? '*' : `.filter-${category}`;

        // Apply the filter immediately
        if (iso) {
            iso.arrange({ filter: currentFilter });
        }

        document.querySelectorAll('#portfolio-flters li').forEach(button => {
            button.classList.remove('filter-active');
        });

        document.querySelector(`[onclick="filterByCategory('${category}')"]`).classList.add('filter-active');

        // Reset displayed items count and update display
        document.dispatchEvent(new Event('DOMContentLoaded')); // Triggers display update with current filter
    }
</script>






